/**
 * –ú–æ–¥—É–ª—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–≥–æ–¥–µ —á–µ—Ä–µ–∑ API wttr.in
 */

const axios = require('axios');

// –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è API wttr.in
const WTTR_BASE_URL = 'https://wttr.in';

// –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—Ä–∞—Ç–∫–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–≥–æ–¥–µ
const WTTR_PARAMS = {
    format: '3',  // –ö—Ä–∞—Ç–∫–∏–π —Ñ–æ—Ä–º–∞—Ç
    lang: 'ru',   // –†—É—Å—Å–∫–∏–π —è–∑—ã–∫
    M: ''         // –ú–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞
};

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞
 * 
 * @param {string} city - –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
 * @returns {Promise<string>} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–µ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
 */
async function getWeatherInfo(city) {
    if (!city || !city.trim()) {
        return '‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.';
    }
    
    city = city.trim();
    
    try {
        // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
        const url = `${WTTR_BASE_URL}/${city}`;
        
        console.log(`–ó–∞–ø—Ä–æ—Å –ø–æ–≥–æ–¥—ã –¥–ª—è –≥–æ—Ä–æ–¥–∞: ${city}`);
        
        // –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ HTTP –∑–∞–ø—Ä–æ—Å–∞
        const response = await axios.get(url, {
            params: WTTR_PARAMS,
            timeout: 10000,
            headers: { 'User-Agent': 'MAX Weather Bot' }
        });
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–≤–µ—Ç–∞
        if (response.status === 200) {
            const weatherText = response.data.trim();
            
            // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞
            if (weatherText && !weatherText.startsWith('Unknown location')) {
                console.log(`–ü–æ–ª—É—á–µ–Ω–∞ –ø–æ–≥–æ–¥–∞ –¥–ª—è ${city}: ${weatherText}`);
                return `üå§ –ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ ${city}:\n${weatherText}`;
            } else {
                console.warn(`–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω: ${city}`);
                return `‚ùå –ì–æ—Ä–æ–¥ '${city}' –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è.`;
            }
        } else {
            console.error(`–û—à–∏–±–∫–∞ API wttr.in: ${response.status}`);
            return '‚ùå –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–∏—Å–æ–º –ø–æ–≥–æ–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
        }
        
    } catch (error) {
        if (error.code === 'ECONNABORTED') {
            console.error(`–¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–≥–æ–¥—ã –¥–ª—è ${city}`);
            return '‚ùå –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
        }
        
        if (error.code === 'ECONNREFUSED' || error.code === 'ENOTFOUND') {
            console.error(`–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –ø–æ–≥–æ–¥—ã –¥–ª—è ${city}`);
            return '‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ —Å–µ—Ä–≤–∏—Å—É –ø–æ–≥–æ–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
        }
        
        if (error.response && error.response.status === 404) {
            console.warn(`–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω: ${city}`);
            return `‚ùå –ì–æ—Ä–æ–¥ '${city}' –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è.`;
        }
        
        console.error(`–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–≥–æ–¥—ã –¥–ª—è ${city}:`, error.message);
        return '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
    }
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞
 * 
 * @param {string} city - –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
 * @returns {Promise<string>} –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–µ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
 */
async function getDetailedWeather(city) {
    if (!city || !city.trim()) {
        return '‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.';
    }
    
    city = city.trim();
    
    try {
        // –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞
        const detailedParams = {
            format: '%l:+%c+%t+%h+%w+%p+%P\n',
            lang: 'ru',
            M: ''
        };
        
        const url = `${WTTR_BASE_URL}/${city}`;
        
        console.log(`–ó–∞–ø—Ä–æ—Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –ø–æ–≥–æ–¥—ã –¥–ª—è –≥–æ—Ä–æ–¥–∞: ${city}`);
        
        const response = await axios.get(url, {
            params: detailedParams,
            timeout: 10000,
            headers: { 'User-Agent': 'MAX Weather Bot' }
        });
        
        if (response.status === 200) {
            const weatherText = response.data.trim();
            
            if (weatherText && !weatherText.startsWith('Unknown location')) {
                console.log(`–ü–æ–ª—É—á–µ–Ω–∞ –ø–æ–¥—Ä–æ–±–Ω–∞—è –ø–æ–≥–æ–¥–∞ –¥–ª—è ${city}`);
                return `üå§ –ü–æ–¥—Ä–æ–±–Ω–∞—è –ø–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ ${city}:\n${weatherText}`;
            } else {
                return `‚ùå –ì–æ—Ä–æ–¥ '${city}' –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è.`;
            }
        } else {
            return '‚ùå –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ä–≤–∏—Å–æ–º –ø–æ–≥–æ–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
        }
        
    } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –ø–æ–≥–æ–¥—ã –¥–ª—è ${city}:`, error.message);
        return '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.';
    }
}

module.exports = {
    getWeatherInfo,
    getDetailedWeather
};