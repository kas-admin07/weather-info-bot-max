/**
 * MAX Weather Bot - –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å @maxhub/max-bot-api
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–≥–æ–¥—ã –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –≥–æ—Ä–æ–¥–∞
 * –ê–≤—Ç–æ—Ä: MAX Bot Team
 */

const { Bot } = require('@maxhub/max-bot-api');
const https = require('https');
const { errorHandler, withRetry, ERROR_TYPES } = require('./utils/errorHandler');
const { config } = require('./config/config');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if (!config.isReady()) {
    errorHandler.error('–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ');
    process.exit(1);
}

const WEATHER_API_KEY = config.get('openWeatherApiKey');
const BOT_TOKEN = config.get('maxBotToken');

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
const bot = new Bot(BOT_TOKEN);

/**
 * –í—ã–ø–æ–ª–Ω—è–µ—Ç HTTP –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã
 * @param {string} url - URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
 * @returns {Promise<object>} –î–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ
 */
function makeRequest(url) {
    return new Promise((resolve, reject) => {
        https.get(url, (res) => {
            let data = '';
            
            res.on('data', (chunk) => {
                data += chunk;
            });
            
            res.on('end', () => {
                try {
                    const jsonData = JSON.parse(data);
                    resolve(jsonData);
                } catch (error) {
                    reject(new Error(`–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: ${error.message}`));
                }
            });
        }).on('error', (error) => {
            reject(error);
        });
    });
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞
 * @param {string} city - –ù–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
 * @returns {Promise<string>} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–≥–æ–¥–µ
 */
async function getWeather(city) {
    try {
        if (!WEATHER_API_KEY) {
            throw new Error('WEATHER_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
        }
        
        const baseUrl = config.get('openWeatherApiUrl', 'https://api.openweathermap.org/data/2.5');
        const url = `${baseUrl}/weather?q=${encodeURIComponent(city)}&appid=${WEATHER_API_KEY}&units=metric&lang=ru`;
        
        errorHandler.info(`–ó–∞–ø—Ä–∞—à–∏–≤–∞—é –ø–æ–≥–æ–¥—É –¥–ª—è –≥–æ—Ä–æ–¥–∞: ${city}`);
        
        const weatherData = await makeRequest(url);
        
        if (weatherData.cod && weatherData.cod !== 200) {
            if (weatherData.cod === '404') {
                errorHandler.warn(`–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω: ${city}`);
                return `‚ùå –ì–æ—Ä–æ–¥ "${city}" –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è.`;
            }
            throw new Error(`–û—à–∏–±–∫–∞ API –ø–æ–≥–æ–¥—ã (${weatherData.cod}): ${weatherData.message}`);
        }
        
        const temp = Math.round(weatherData.main.temp);
        const feelsLike = Math.round(weatherData.main.feels_like);
        const description = weatherData.weather[0].description;
        const humidity = weatherData.main.humidity;
        const pressure = weatherData.main.pressure;
        const windSpeed = weatherData.wind?.speed || 0;
        
        const weatherInfo = `üåç –ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ ${weatherData.name}:\n` +
                          `üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: ${temp}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ ${feelsLike}¬∞C)\n` +
                          `‚òÅÔ∏è –û–ø–∏—Å–∞–Ω–∏–µ: ${description}\n` +
                          `üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: ${humidity}%\n` +
                          `üîΩ –î–∞–≤–ª–µ–Ω–∏–µ: ${pressure} –≥–ü–∞\n` +
                          `üí® –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: ${windSpeed} –º/—Å`;
        
        errorHandler.info(`–ü–æ–≥–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞ –¥–ª—è –≥–æ—Ä–æ–¥–∞: ${city}`);
        return weatherInfo;
        
    } catch (error) {
        errorHandler.handleError(
            error,
            ERROR_TYPES.WEATHER_API_ERROR,
            { city, action: 'getWeather' }
        );
        
        if (error.message.includes('city not found') || error.message.includes('404')) {
            return `‚ùå –ì–æ—Ä–æ–¥ "${city}" –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è.`;
        }
        
        if (error.message.includes('timeout') || error.message.includes('ENOTFOUND')) {
            return `‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ —Å–µ—Ä–≤–∏—Å—É –ø–æ–≥–æ–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.`;
        }
        
        return `‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ –¥–ª—è –≥–æ—Ä–æ–¥–∞ "${city}". –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.`;
    }
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
 */
async function start_handler(context) {
    const welcomeText = `üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Weather Bot!\n\n` +
        `üå§ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –∏ —è –ø–æ–∫–∞–∂—É —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É.\n\n` +
        `–ü—Ä–∏–º–µ—Ä—ã:\n` +
        `‚Ä¢ –ú–æ—Å–∫–≤–∞\n` +
        `‚Ä¢ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥\n` +
        `‚Ä¢ London\n` +
        `‚Ä¢ New York\n\n` +
        `–¢–∞–∫–∂–µ –¥–æ—Å—Ç—É–ø–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /weather <–≥–æ—Ä–æ–¥> –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞.`;
    
    await context.reply(welcomeText);
    errorHandler.info('–ö–æ–º–∞–Ω–¥–∞ /start –≤—ã–ø–æ–ª–Ω–µ–Ω–∞', { userId: context.from?.id });
}
bot.command('start', start_handler);

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /weather
 * –ü–æ–ª—É—á–∞–µ—Ç –ø–æ–≥–æ–¥—É –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≥–æ—Ä–æ–¥–∞
 */
async function weather_handler(context) {
    const args = context.text.split(' ').slice(1); // –£–±–∏—Ä–∞–µ–º /weather
    const city = args.join(' ').trim();
    
    if (!city) {
        await context.reply('‚ùå –£–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞. –ù–∞–ø—Ä–∏–º–µ—Ä: /weather –ú–æ—Å–∫–≤–∞');
        return;
    }
    
    errorHandler.info(`–ö–æ–º–∞–Ω–¥–∞ /weather –¥–ª—è –≥–æ—Ä–æ–¥–∞: ${city}`, { userId: context.from?.id });
    
    const weatherInfo = await getWeather(city);
    await context.reply(weatherInfo);
}
bot.command('weather', weather_handler);

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –≥–æ—Ä–æ–¥–æ–≤ –∫–∞–∫ –∑–∞–ø—Ä–æ—Å—ã –ø–æ–≥–æ–¥—ã
 */
async function message_handler(context) {
    const messageText = context.text?.trim();
    
    if (!messageText) {
        return;
    }
    
    // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã - –æ–Ω–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ
    if (messageText.startsWith('/')) {
        return;
    }
    
    const userName = context.from?.name || context.from?.username || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π';
    errorHandler.info(`–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç ${userName}: ${messageText}`);
    
    // –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤ —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏—è
    const cityPatterns = {
        '–º–æ—Å–∫–≤–∞': ['–º–æ—Å–∫–≤–∞', 'moscow', '–º—Å–∫'],
        '—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥': ['—Å–ø–±', '—Å–∞–Ω–∫—Ç-–ø–µ—Ç–µ—Ä–±—É—Ä–≥', '–ø–µ—Ç–µ—Ä–±—É—Ä–≥', '–ø–∏—Ç–µ—Ä', 'saint petersburg', 'st petersburg'],
        '–µ–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥': ['–µ–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥', '–µ–∫–±', 'yekaterinburg'],
        '–Ω–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫': ['–Ω–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫', '–Ω–æ–≤–æ—Å–∏–±', 'novosibirsk'],
        '–∫–∞–∑–∞–Ω—å': ['–∫–∞–∑–∞–Ω—å', 'kazan'],
        '–Ω–∏–∂–Ω–∏–π –Ω–æ–≤–≥–æ—Ä–æ–¥': ['–Ω–∏–∂–Ω–∏–π –Ω–æ–≤–≥–æ—Ä–æ–¥', '–Ω–∏–∂–Ω–∏–π', 'nizhny novgorod'],
        '—á–µ–ª—è–±–∏–Ω—Å–∫': ['—á–µ–ª—è–±–∏–Ω—Å–∫', '—á–µ–ª—è–±–∞', 'chelyabinsk'],
        '—Å–∞–º–∞—Ä–∞': ['—Å–∞–º–∞—Ä–∞', 'samara'],
        '–æ–º—Å–∫': ['–æ–º—Å–∫', 'omsk'],
        '—Ä–æ—Å—Ç–æ–≤-–Ω–∞-–¥–æ–Ω—É': ['—Ä–æ—Å—Ç–æ–≤-–Ω–∞-–¥–æ–Ω—É', '—Ä–æ—Å—Ç–æ–≤', 'rostov'],
        '—É—Ñ–∞': ['—É—Ñ–∞', 'ufa'],
        '–∫—Ä–∞—Å–Ω–æ—è—Ä—Å–∫': ['–∫—Ä–∞—Å–Ω–æ—è—Ä—Å–∫', 'krasnoyarsk'],
        '–≤–æ—Ä–æ–Ω–µ–∂': ['–≤–æ—Ä–æ–Ω–µ–∂', 'voronezh'],
        '–ø–µ—Ä–º—å': ['–ø–µ—Ä–º—å', 'perm']
    };
    
    const normalizedText = messageText.toLowerCase();
    let cityFound = null;
    
    // –ò—â–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å –≥–æ—Ä–æ–¥–∞–º–∏
    for (const [standardName, patterns] of Object.entries(cityPatterns)) {
        for (const pattern of patterns) {
            if (normalizedText.includes(pattern)) {
                cityFound = standardName;
                break;
            }
        }
        if (cityFound) break;
    }
    
    if (cityFound) {
        errorHandler.info(`–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é –∑–∞–ø—Ä–æ—Å –ø–æ–≥–æ–¥—ã –¥–ª—è –≥–æ—Ä–æ–¥–∞: ${cityFound}`);
        const weatherInfo = await getWeather(cityFound);
        await context.reply(weatherInfo);
    } else {
        // –ï—Å–ª–∏ –≥–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ, –ø—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–µ—Å—å —Ç–µ–∫—Å—Ç –∫–∞–∫ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞
        errorHandler.info(`–ü—Ä–æ–±—É—é –∑–∞–ø—Ä–æ—Å–∏—Ç—å –ø–æ–≥–æ–¥—É –¥–ª—è: ${messageText}`);
        const weatherInfo = await getWeather(messageText);
        
        // –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–µ —É–¥–∞–ª—Å—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if (weatherInfo.includes('‚ùå')) {
            const helpMessage = `üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–≥–æ–¥–µ.\n\n` +
                              `–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞, –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É –≤–∞–º –æ —Ç–µ–∫—É—â–µ–π –ø–æ–≥–æ–¥–µ.\n\n` +
                              `–ù–∞–ø—Ä–∏–º–µ—Ä: "–ú–æ—Å–∫–≤–∞", "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥", "–ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥"\n\n` +
                              `üå§Ô∏è –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –≥–æ—Ä–æ–¥–∞: –ú–æ—Å–∫–≤–∞, –°–ü–±, –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥, –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫, –ö–∞–∑–∞–Ω—å –∏ –º–Ω–æ–≥–∏–µ –¥—Ä—É–≥–∏–µ!\n\n` +
                              `–¢–∞–∫–∂–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã:\n` +
                              `‚Ä¢ /start - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n` +
                              `‚Ä¢ /weather <–≥–æ—Ä–æ–¥> - –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É`;
            
            await context.reply(helpMessage);
        } else {
            await context.reply(weatherInfo);
        }
    }
}
bot.on('message_created', message_handler);

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏
 */
async function bot_started_handler(ctx) {
    errorHandler.info('MAX Weather Bot –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
    console.log('üîÑ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è...');
    console.log('üí° –û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã');
    console.log('‚èπ  –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏\n');
}
bot.on('bot_started', bot_started_handler);

/**
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞
 */
async function startBot() {
    try {
        errorHandler.info('–ó–∞–ø—É—Å–∫ MAX Weather Bot');
        console.log('‚ïê'.repeat(40));
        console.log('üîß –ó–∞–ø—É—Å–∫ MAX Weather Bot');
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
        console.log('üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞...');
        if (!BOT_TOKEN) {
            throw new Error('–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        }
        console.log('‚úÖ –¢–æ–∫–µ–Ω –Ω–∞–π–¥–µ–Ω:', BOT_TOKEN.substring(0, 10) + '...');
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
        process.on('SIGINT', () => {
            console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...');
            console.log('‚úÖ –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
            process.exit(0);
        });
        
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞...');
        // –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        await bot.start();
        console.log('‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!');
        
    } catch (error) {
        errorHandler.handleError(
            error,
            ERROR_TYPES.BOT_STARTUP_ERROR,
            { action: 'startBot' }
        );
        console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
        process.exit(1);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
startBot().catch(error => {
    console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ:', error);
    process.exit(1);
});

module.exports = {
    startBot,
    getWeather
};